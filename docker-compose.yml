version: "3.9"
services:
  # nginx:
  #   image: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./init-config/nginx.conf:/etc/nginx/nginx.conf
  #   networks:
  #     - langchain-network
  #   depends_on:
  #     - lc-api
  lc-api:
    image: warching/langchain-base-image:0.0.221
    ports:
      - "8000:80"
    # command:
    #   - /bin/sh
    #   - -c
    #   - |
    #       sleep 3600
    command:
      - /bin/bash
      - -c
      - |
          uvicorn main:app --reload --host 0.0.0.0 --port 80
    # command:
    #   - /bin/bash
    #   - -c
    #   - |
    #       curl -sL https://aka.ms/InstallAzureCLIDeb | bash
    #       uvicorn main:app --reload --host 0.0.0.0 --port 80
    env_file:
      - .env
    environment:
      - WATCHFILES_FORCE_POLLING=true
    volumes:
      - ./docs-data:/app/docs-data
      - ./tools:/app/tools
      - ./agents:/app/agents
      - ./features:/app/features
      - ./.env:/app/.env
      - ./main.py:/app/main.py
    networks:
      - langchain-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      replicas: 1

  lc-admin-api:
    image: warching/langchain-base-image:0.0.221
    ports:
      - "8100:80"
    command:
      - /bin/bash
      - -c
      - |
          uvicorn adminapi:app --reload --host 0.0.0.0 --port 80
    env_file:
      - .env
    volumes:
      - ./adminapi.py:/app/adminapi.py
      - ./tools:/app/tools
      - ./main.py:/app/main.py
      - ./.env:/app/.env
      - ./docs-data:/app/docs-data
    networks:
      - langchain-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    deploy:
      replicas: 1

  st-admin-ui:
    image: warching/streamlit
    command:
      - /bin/bash
      - -c
      - |
          streamlit run 0_ðŸ“š_InSource_Home.py --server.fileWatcherType none --server.port=8501 --server.address=0.0.0.0
    environment:
      - POSTGRES_HOST=host.docker.internal
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - INSOURCE_CHAT_HOST=host.docker.internal:8000
      - INSOURCE_ADMIN_HOST=host.docker.internal:8100
    ports:
      - "8200:8501"
    volumes:
      - ./admin-ui:/app
    networks:
      - langchain-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # streamlit:
  #   image: warching/streamlit
  #   command:
  #     - /bin/bash
  #     - -c
  #     - |
  #         streamlit run quiz_example.py --server.port=8501 --server.address=0.0.0.0
  #   env_file:
  #     - .env
  #   ports:
  #     - "8501:8501"
  #   volumes:
  #     - ./streamlit:/app
  # openai-teams-bot:
  #   environment:
  #     - DOCKER_DEFAULT_PLATFORM=linux/amd64
  #   image: warching/openai-teams-bot:langchain
  #   ports:
  #     - "3978:3978"
  #   env_file:
  #     - .env
  #   networks:
  #     - langchain-network
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  # db:
  #   image: postgres:15.2-alpine
  #   restart: always
  #   environment:
  #       POSTGRES_DB: postgres
  #       POSTGRES_USER: postgres #postgres
  #       POSTGRES_PASSWORD: postgres #1234
  #       PGDATA: /var/lib/postgresql/data
  #   volumes:
  #       - ./db-data:/var/lib/postgresql/data
  #       - ./init-config/init.sql:/docker-entrypoint-initdb.d/10-init.sql
  #   ports:
  #       - "5432:5432"
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   networks:
  #     langchain-network:

networks:
  langchain-network: